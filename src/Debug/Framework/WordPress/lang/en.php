<?php

return array(
    'cache.hits' => 'Cache Hits',
    'cache.misses' => 'Cache Misses',
    'channel.hooks' => 'Hooks',
    'deprecated.constructor' => 'The called constructor method {old} is deprecated since version {version}.  Use {replacement} instead.',
    'deprecated.constructor.parent-class' => 'The called constructor method {old} in {parentClass} is deprecated since version {version}.  Use {replacement} instead.',
    'deprecated.func.arg' => '{function} was called with an argument that is deprecated since version {version}.',
    'deprecated.has-replacement' => '{old} is deprecated since version {version}.  Use {replacement} instead.',
    'deprecated.no-replacement' => '{old} is deprecated since version {version}.  No alternative available.',
    'http.async-response' => 'WordPress does not provide asynchronous response',
    'option.page_for_posts' => 'Page For Posts',
    'option.page_on_front' => 'Page on Front',
    'option.show_on_front' => 'Show on Front',
    'query.arguments' => 'Query Arguments',
    'query.object' => 'Queried Object',
    'query.object-id' => 'Queried Object Id',
    'query.post-type' => 'Post Type',
    'query.sql' => 'Query SQL',
    'query.template' => 'Query Template',
    'query.type' => 'Query Type',
    'request.query' => 'Query String',
    'request.rewrite' => 'Request / Rewrite',
    'rewrite-query' => 'Matched Rewrite Query',
    'rewrite-rule' => 'Matched Rewrite Rule',
    'savequeries.false' => 'SAVEQUERIES is false.  Queries will not be logged.',
    'settings' => 'Settings',

    'settings.control.emailTo' => 'Email To',
    'settings.control.enableEmailer' => 'Enable Email',
    'settings.control.enableEmailer.option.on' => 'Send errors to email',
    'settings.control.enableProfiling' => 'Enable Profile Method',
    'settings.control.enableProfiling.describedBy' => 'If PHPDebugConsole is collecting data <b>AND</b> this option is enabled, then we will set {declareTicks}<br /><b>Only enable this when needed</b>',
    'settings.control.enableProfiling.option.on' => 'Enable PHPDebugConsole\'s <a target="_blank" href="https://bradkent.com/php/debug#methodProfile">profile method</a>',
    'settings.control.localeFirstChoice' => 'Locale',
    'settings.control.logEnvInfo' => 'Log Environment',
    'settings.control.logEnvInfo.option.errorReporting' => 'Issues with error reporting',
    'settings.control.logEnvInfo.option.files' => 'Files included',
    'settings.control.logEnvInfo.option.phpInfo' => 'Php information',
    'settings.control.logEnvInfo.option.serverVals' => '$_SERVER values',
    'settings.control.logRequestInfo' => 'Log Request',
    'settings.control.logRequestInfo.option.cookies' => 'Cookies ($_COOKIE)',
    'settings.control.logRequestInfo.option.files' => 'Posted files ($_FILES)',
    'settings.control.logRequestInfo.option.headers' => 'Request headers',
    'settings.control.logRequestInfo.option.post' => 'Post data ($_POST)',
    'settings.control.logResponse' => 'Log Response',
    'settings.control.logResponse.option.auto' => 'Automatic',
    'settings.control.logResponse.option.false' => 'Never',
    'settings.control.logResponse.option.true' => 'Always',
    'settings.control.logRuntime' => 'Log Runtime',
    'settings.control.logRuntime.option.on' => 'Log memory usage and request duration',
    'settings.control.maxDepth' => 'Max Depth',
    'settings.control.maxDepth.describedBy' => 'Maximum depth to traverse when logging objects/arrays.  0 = unlimited',
    'settings.control.password' => 'Password',
    'settings.control.password.describedBy' => 'This password may be passed in the request to enable collecting/outputting the log without being logged in as an admin.<br />'
        . 'Enter the plain-text password here.  It will be stored as a hashed value.',
    'settings.control.route' => 'Route',
    'settings.control.route.describedBy' => 'How the log will be output',
    'settings.control.route.option.auto' => 'Automatic',
    'settings.control.route.option.chromeLogger' => 'chromeLogger (browser plugin)',
    'settings.control.route.option.firephp' => 'FirePHP (browser plugin)',
    'settings.control.route.option.html' => 'HTML (appended to page output)',
    'settings.control.route.option.script' => 'Script (output to develoepr console)',
    'settings.control.route.option.serverLog' => 'Server Log (browser plugin)',
    'settings.control.routeDiscord' => 'Enable Discord',
    'settings.control.routeDiscord.documentation' => 'Discord webhook documentation',
    'settings.control.routeDiscord.option.on' => 'Send errors to Discord',
    'settings.control.routeSlack' => 'Enable Slack',
    'settings.control.routeSlack.option.on' => 'Send errors to Slack',
    'settings.control.routeSlackChannel' => 'Channel',
    'settings.control.routeSlackToken' => 'Token',
    'settings.control.routeTeams' => 'Enable Teams',
    'settings.control.routeTeams.documentation' => 'Teams webhook documentation',
    'settings.control.routeTeams.option.on' => 'Send errors to Teams',
    'settings.control.waitThrottle' => 'Throttle / Wait',
    'settings.control.waitThrottle.describedBy' => 'Minimum time between notifications (in minutes)',
    'settings.control.wordpress.option.cache' => 'Cache Information',
    'settings.control.wordpress.option.core' => 'Query, template, post-type, show_on_front, etc',
    'settings.control.wordpress.option.db' => 'Database queries',
    'settings.control.wordpress.option.hooks' => 'Hooks',
    'settings.control.wordpress.option.http' => 'HTTP requests',
    'settings.controlCommon.defaultsToEnvVar' => 'If left empty, will fall back to environment variable {envVar}',
    'settings.controlCommon.webhookUrl' => 'Webhook URL',
    'settings.description' => 'PHPDebugConsole Settings',

    'settings.section.errors' => 'Error Notification',
    'settings.section.general' => 'General Settings',
);
