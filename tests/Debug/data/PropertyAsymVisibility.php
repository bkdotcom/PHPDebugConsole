<?php

/**
 * @phpcs:disable SlevomatCodingStandard.Arrays.AlphabeticallySortedByKeys.IncorrectKeyOrder
 */

use bdk\Debug\Abstraction\Abstracter;
use bdk\Debug\Abstraction\Type;
use bdk\Test\Debug\Fixture\PropertyAsymVisibility;

return array(
    'attributes' => array(),
    'cases' => array(),
    'cfgFlags' => 29360127,
    'className' => PropertyAsymVisibility::class,
    'constants' => array(),
    'debugMethod' => 'log',
    'definition' => array(
        'extensionName' => false,
        'fileName' => TEST_DIR . '/Debug/Fixture/PropertyAsymVisibility.php',
        'startLine' => 8,
    ),
    'extends' => array(),
    'implements' => array(),
    'interfacesCollapse' => array(),
    'isAbstract' => false,
    'isAnonymous' => false,
    'isExcluded' => false,
    'isFinal' => false,
    'isInterface' => false,
    'isLazy' => false,
    'isMaxDepth' => false,
    'isReadOnly' => false,
    'isRecursion' => false,
    'isTrait' => false,
    'keys' => array(),
    'methods' => array(),
    'methodsWithStaticVars' => array(),
    'phpDoc' => array(
        'desc' => '',
        'summary' => 'PHP 8.4 Property Asymmetric Visibility',
    ),
    'properties' => array(
        'age' => array(
            'attributes' => array(),
            'debugInfoExcluded' => false,
            'declaredLast' => PropertyAsymVisibility::class,
            'declaredOrig' => PropertyAsymVisibility::class,
            'declaredPrev' => null,
            'forceShow' => false,
            'hooks' => array(),
            'isDeprecated' => false,
            'isFinal' => PHP_VERSION_ID >= 80400,
            'isPromoted' => false,
            'isReadOnly' => false,
            'isStatic' => false,
            'isVirtual' => false,
            'phpDoc' => array(
                'desc' => '',
                'summary' => '',
            ),
            'type' => Type::TYPE_INT,
            'value' => Abstracter::UNDEFINED,
            'valueFrom' => 'value',
            'visibility' => ['protected','private-set'],
        ),
        'name' => array(
            'attributes' => array(),
            'debugInfoExcluded' => false,
            'declaredLast' => PropertyAsymVisibility::class,
            'declaredOrig' => PropertyAsymVisibility::class,
            'declaredPrev' => null,
            'forceShow' => false,
            'hooks' => array(),
            'isDeprecated' => false,
            'isFinal' => false,
            'isPromoted' => false,
            'isReadOnly' => false,
            'isStatic' => false,
            'isVirtual' => false,
            'phpDoc' => array(
                'desc' => '',
                'summary' => '',
            ),
            'type' => Type::TYPE_STRING,
            'value' => Abstracter::UNDEFINED,
            'valueFrom' => 'value',
            'visibility' => ['public', 'protected-set'],
        ),
        'static' => array(
            'attributes' => array(),
            'debugInfoExcluded' => false,
            'declaredLast' => PropertyAsymVisibility::class,
            'declaredOrig' => PropertyAsymVisibility::class,
            'declaredPrev' => null,
            'forceShow' => false,
            'hooks' => array(),
            'isDeprecated' => false,
            'isFinal' => false,
            'isPromoted' => false,
            'isReadOnly' => false,
            'isStatic' => true,
            'isVirtual' => false,
            'phpDoc' => array(
                'desc' => '',
                'summary' => '',
            ),
            'type' => Type::TYPE_ARRAY,
            'value' => array(),
            'valueFrom' => 'value',
            'visibility' => ['public'],
        ),
    ),
    'scopeClass' => 'bdk\Test\Debug\Type\ObjectTest',
    'sectionOrder' => array(
        'attributes',
        'extends',
        'implements',
        'constants',
        'cases',
        'properties',
        'methods',
        'phpDoc',
    ),
    'sort' => 'inheritance visibility name',
    'stringified' => null,
    'traverseValues' => array(),
    'type' => Type::TYPE_OBJECT,
    'typeMore' => null,
    'viaDebugInfo' => false,
);
